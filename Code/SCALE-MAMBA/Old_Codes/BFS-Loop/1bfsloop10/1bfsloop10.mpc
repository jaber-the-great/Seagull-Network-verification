from datetime import datetime
NumOfNodes = 10
DestNode = 10

jaber = sint.Matrix(NumOfNodes -1,2)
jaber[0][0] = 1
jaber[0][1] = 7
jaber[1][0] = 2
jaber[1][1] = 5
jaber[2][0] = 3
jaber[2][1] = 1
jaber[3][0] = 4
jaber[3][1] = 6
jaber[4][0] = 5
jaber[4][1] = 6
jaber[5][0] = 6
jaber[5][1] = 10
jaber[6][0] = 8
jaber[6][1] = 9
jaber[7][0] = 9
jaber[7][1] = 10
jaber[8][0] = 7
jaber[8][1] = 3


visited = Array(NumOfNodes,sint)
for i in range(NumOfNodes):
    visited[i] = 0
#setting the destination node for reverse BFS
visited[0] = DestNode


cnt = 1
index = 0
flag1 = True
start_time = datetime.now()
while index < NumOfNodes and cnt < NumOfNodes:
    for i in range(NumOfNodes -1):
        if jaber[i][1] == visited[index]:
            visited[cnt]= jaber[i][0]
            cnt = cnt +1
    index = index +1

print("The visited nodes in BFS order:")
print(visited)
print("The number of visited nodes: %d" % (cnt))
if cnt == NumOfNodes:
    print("The network is loop free")
else:
    print("The network  is NOT loop free")
end_time = datetime.now()
print('Duration: {}'.format(end_time - start_time))

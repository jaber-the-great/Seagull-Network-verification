from datetime import datetime

NumOfEdges = 3000

#read in start node and dest node
StartNode = sint.get_private_input_from(0)
DestNode = sint.get_private_input_from(0)

print_ln("Start node = %s, Destination node = %s", StartNode.reveal(), DestNode.reveal())

edges = sint.Matrix(NumOfEdges, 2)
# read in the edge list
for i in range(NumOfEdges):
   edges[i][0] = sint.get_private_input_from(0)
   edges[i][1] = sint.get_private_input_from(0)
   print_ln("%s :  %s, %s", i, edges[i][0].reveal(), edges[i][1].reveal())


curr  = StartNode
cnt = 0
found_loop = False
for t in range(15):
    for i in range(NumOfEdges):
        if edges[i][0] == curr:
            if edges[i][1] == DestNode:
                found_loop = True
                break
            else:
                curr = edges[i][1]
                cnt = cnt+1
                running=True

    if found_loop:
        break

f found_loop or cnt == 15:
   print_ln("found loop")
else:
   print_ln("no loop detected")
   
